cxx_library(
  name = 'protobuf-lite',
  header_namespace = 'google/protobuf',
  exported_headers = glob([
    ('src/google/protobuf/*.h'),
  ]),
  # copy-paste from libprotobuf_lite_la_SOURCES variable of the makefile
  # this is from version 3.5.0
  srcs =[
	'src/google/protobuf/stubs/atomicops_internals_x86_gcc.cc',
	"src/google/protobuf/stubs/atomicops_internals_x86_msvc.cc",
	"src/google/protobuf/stubs/bytestream.cc",
	"src/google/protobuf/stubs/bytestream.h",
	"src/google/protobuf/stubs/common.cc",
	"src/google/protobuf/stubs/hash.h",
	"src/google/protobuf/stubs/int128.cc",
	"src/google/protobuf/stubs/int128.h",
	"src/google/protobuf/stubs/io_win32.cc",
	"src/google/protobuf/stubs/io_win32.h",
	"src/google/protobuf/stubs/map_util.h",
	"src/google/protobuf/stubs/mathutil.h",
	"src/google/protobuf/stubs/once.cc",
	"src/google/protobuf/stubs/shared_ptr.h",
	"src/google/protobuf/stubs/status.cc",
	"src/google/protobuf/stubs/status.h",
	"src/google/protobuf/stubs/status_macros.h",
	"src/google/protobuf/stubs/statusor.cc",
	"src/google/protobuf/stubs/statusor.h",
	"src/google/protobuf/stubs/stringpiece.cc",
	"src/google/protobuf/stubs/stringpiece.h",
	"src/google/protobuf/stubs/stringprintf.cc",
	"src/google/protobuf/stubs/stringprintf.h",
	"src/google/protobuf/stubs/structurally_valid.cc",
	"src/google/protobuf/stubs/strutil.cc",
	"src/google/protobuf/stubs/strutil.h",
	"src/google/protobuf/stubs/time.cc",
	"src/google/protobuf/stubs/time.h",
	"src/google/protobuf/arena.cc",
	"src/google/protobuf/arenastring.cc",
	"src/google/protobuf/extension_set.cc",
	"src/google/protobuf/generated_message_util.cc",
	"src/google/protobuf/generated_message_table_driven_lite.h",
	"src/google/protobuf/generated_message_table_driven_lite.cc",
	"src/google/protobuf/message_lite.cc",
	"src/google/protobuf/repeated_field.cc",
	"src/google/protobuf/wire_format_lite.cc",
	"src/google/protobuf/io/coded_stream.cc",
	"src/google/protobuf/io/coded_stream_inl.h",
	"src/google/protobuf/io/zero_copy_stream.cc",
	"src/google/protobuf/io/zero_copy_stream_impl_lite.cc",
  ],

)
